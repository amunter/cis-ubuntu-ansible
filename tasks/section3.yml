---

  - name: 3.1.1 Ensure IP forwarding is disabled (Scored)
    sysctl:
      name: net.ipv4.ip_forward
      value: '{{net_ipv4_ip_forward}}'
      state: present
    tags:
      - section3
      - section3.1
      - section3.1.1

  - name: 3.1.2 Ensure packet redirect sending is disabled (Scored)
    sysctl:
      name: net.ipv4.conf.all.send_redirects
      value: 0
      state: present
    tags:
      - section3
      - section3.1
      - section3.1.2

  - name: 3.2.1 Ensure source routed packets are not accepted (Scored)
    sysctl:
      name: net.ipv4.conf.all.accept_source_route
      value: 0
      state: present
    tags:
      - section3
      - section3.2
      - section3.2.1

  - name: 3.2.2 Ensure ICMP redirects are not accepted (Scored)
    sysctl:
      name: net.ipv4.conf.all.accept_redirects
      value: 0
      state: present
    tags:
      - section3
      - section3.2
      - section3.2.2

  - name: 3.2.3 Ensure secure ICMP redirects are not accepted (Scored)
    sysctl:
      name: net.ipv4.conf.all.secure_redirects
      value: 0
      state: present
    tags:
      - section3
      - section3.2
      - section3.2.3

  - name: 3.2.4 Ensure suspicious packets are logged (Scored)
    sysctl:
      name: net.ipv4.conf.all.log_martians
      value: 1
      state: present
    tags:
      - section3
      - section3.2
      - section3.2.4

  - name: 3.2.5 Ensure broadcast ICMP requests are ignored (Scored)
    sysctl:
      name: net.ipv4.icmp_echo_ignore_broadcasts
      value: 1
      state: present
    tags:
      - section3
      - section3.2
      - section3.2.5

  - name: 3.2.6 Ensure bogus ICMP responses are ignored (Scored)
    sysctl:
      name: net.ipv4.icmp_ignore_bogus_error_responses
      value: 1
      state: present
    tags:
      - section3
      - section3.2
      - section3.2.6

  - name: 3.2.7 Ensure Reverse Path Filtering is enabled (Scored)
    sysctl:
      name: net.ipv4.conf.all.rp_filter
      value: 1
      state: present
    tags:
      - section3
      - section3.2
      - section3.2.7

  - name: 3.2.8 Ensure TCP SYN Cookies is enabled (Scored)
    sysctl:
      name: net.ipv4.tcp_syncookies
      value: 1
      state: present
    when: enable_tcp_syncookies == True
    tags:
      - section3
      - section3.2
      - section3.2.8

  - name: 3.3.1 Ensure IPv6 router advertisements are not accepted (Not Scored)
    sysctl:
      name: net.ipv6.conf.all.accept_ra
      value: 0
      state: present
    tags:
      - section3
      - section3.3
      - section3.3.1

  - name: 3.3.2 Ensure IPv6 redirects are not accepted (Not Scored)
    sysctl:
      name: net.ipv6.conf.default.accept_redirects
      value: 0
      state: present
    tags:
      - section3
      - section3.3
      - section3.3.2

  - name: 3.3.3 Ensure IPv6 is disabled (Not Scored)
    sysctl:
      name: "{{ item }}"
      value: 1
      state: present
    with_items:
      - net.ipv6.conf.all.disable_ipv6
      - net.ipv6.conf.default.disable_ipv6
      - net.ipv6.conf.lo.disable_ipv6
    when: disable_ipv6 == True
    tags:
      - section3
      - section3.3
      - section3.3.3

  - name: 3.4.1 Ensure TCP Wrappers is installed (Scored)
    apt:
      name: tcpd
      state: present
    tags:
      - section3
      - section3.4
      - section3.4.1

  - name: 3.4.2 Ensure /etc/hosts.allow is configured (Scored)
    lineinfile:
      dest: /etc/hosts.allow
      line: 'ALL:ALL'
    when: enable_hosts_allow == True
    tags:
      - section3
      - section3.4
      - section3.4.2

  - name: 3.4.3 Ensure /etc/hosts.deny is configured (Scored)
    lineinfile:
      dest: /etc/hosts.deny
      line: 'ALL:ALL'
    when: enable_hosts_deny == True
    tags:
      - section3
      - section3.4
      - section3.4.3

  - name: 3.4.4 Ensure permissions on /etc/hosts.allow are configured (Scored)
    file:
      path: /etc/hosts.allow
      owner: root
      group: root
      mode: 0644
    tags:
      - section3
      - section3.4
      - section3.4.5

  - name: 3.4.5 Ensure permissions on /etc/hosts.deny are 644 (Scored)
    file:
      path: /etc/hosts.deny
      owner: root
      group: root
      mode: 0644
    tags:
      - section3
      - section3.4
      - section3.4.5

  - name: 3.5.1 Ensure DCCP is disabled (Not Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install dccp /bin/true'
      state: present
      create: True
    tags:
      - section3
      - section3.5
      - section3.5.1

  - name: 3.5.2 Ensure SCTP is disabled (Not Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install sctp /bin/true'
      state: present
      create: True
    tags:
      - section3
      - section3.5
      - section3.5.2

  - name: 3.5.3 Ensure RDS is disabled (Not Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install rds /bin/true'
      state: present
      create: True
    tags:
      - section3
      - section3.5
      - section3.5.3

  - name: 3.5.4 Ensure TIPC is disabled (Not Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install tipc /bin/true'
      state: present
      create: True
    tags:
      - section3
      - section3.5
      - section3.5.4

  - name: 3.6.1 Ensure iptables is installed (Scored)
    apt:
      name: "{{ item }}" 
      state: present
    with_items:
      - iptables
      - iptables-persistent
    when: activate_iptables == True
    tags:
      - section3
      - section3.6
      - section3.6.1

  - shell: iptables -L|egrep 'INPUT|FORWARD|OUTPUT'|grep "policy DROP"
    register: drop_policy
    failed_when: False
    changed_when: False
    tags:
      - section3
      - section3.6
      - section3.6.2

  - name: 3.6.2 Ensure default deny firewall policy (Scored)
    lineinfile:
      name: "{{iptables_rules_file}}"
      line: "{{ item }}"
      insertbefore: '^COMMIT'
      create: yes
    with_items:
      - '-P INPUT DROP'
      - '-P FORWARD DROP'
      - '-P OUTPUT DROP'
    when: activate_iptables == True and firewall_policy_drop == True and drop_policy.rc == 1
    notify: restart iptables
    tags:
      - section3
      - section3.6
      - section3.6.2

  - name: 3.6.3 Ensure loopback traffic is configured (Scored)
    lineinfile: 
      name: "{{iptables_rules_file}}"
      line: "{{ item }}"
      insertbefore: '^COMMIT'
      create: yes
    with_items:
      - '-A INPUT -i lo -j ACCEPT'
      - '-A OUTPUT -o lo -j ACCEPT'
      - '-A INPUT -s 127.0.0.0/8 -j DROP'
    when: activate_iptables == True
    notify: restart iptables
    tags:
      - section3
      - section3.6
      - section3.6.3

  - name: 3.6.4 Ensure outbound and established connections are configured (Not Scored)
    lineinfile: 
      name: "{{iptables_rules_file}}"
      line: "{{ item }}"
      insertbefore: '^COMMIT'
      create: yes
    with_items:
      - '-A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT'
      - '-A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT'
      - '-A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT'
      - '-A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT'
      - '-A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT'
      - '-A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT'
      - '-A INPUT -p tcp --dport ssh -j ACCEPT'
      - '-A OUTPUT -p tcp --sport 22 -j ACCEPT'
    when: activate_iptables == True
    notify: restart iptables
    tags:
      - section3
      - section3.6
      - section3.6.4

  - shell: ss -ltnu|egrep 'tcp|udp'|awk '{ print $5 }'|cut -d":" -f2|sort|uniq
    register: listening_ports
    failed_when: False
    changed_when: False
    tags:
      - section3
      - section3.6
      - section3.6.5

  - name: 3.6.5 Ensure firewall rules exist for all open ports (Scored)
    debug:
      msg: "Check firewall rules for the listening ports: {{listening_ports.stdout_lines}}"
    tags:
      - section3
      - section3.6
      - section3.6.5

  - apt:
      name: rfkill
      state: present
    tags:
      - section3
      - section3.7

  - name: 3.7 Ensure wireless interfaces are disabled (Not Scored)
    command: rfkill block wifi
    when: disable_wifi == True
    tags:
      - section3
      - section3.7
