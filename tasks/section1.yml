---

  - name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install cramfs /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.1

  - name: 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install freevxfs /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.2

  - name: 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install jffs2 /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.3

  - name: 1.1.1.4 Ensure mounting of hfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install hfs /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.4

  - name: 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install hfsplus /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.5

  - name: 1.1.1.6 Ensure mounting of squashfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install squashfs /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.6

  - name: 1.1.1.7 Ensure mounting of udf filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install udf /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.7

  - name: 1.1.1.8 Ensure mounting of FAT filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install vfat /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.8

  - name: 1.1.2 Ensure separate partition exists for /tmp (Scored)
    command: grep '\s/tmp\s' /etc/fstab
    register: tmp_partition
    failed_when: tmp_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section1
      - section1.1
      - section1.1.2

  - apt:
      name: python-pip
      state: present
    when: tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.3

  - name: install dependencies for mountopts-module
    pip:
      name: fstab
    when: tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.3

  - mountopts:
      name: /tmp
      option: nodev
      state: present
    when: tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.3

  - shell: mount | grep /tmp|grep nodev
    register: mount_tmp_output
    failed_when: False
    ignore_errors: True
    tags: 
      - section1 
      - section1.1
      - section1.1.3

  - name: 1.1.3 Ensure nodev option set on /tmp partition (Scored)
    command: mount -o remount,nodev /tmp
    ignore_errors: True
    when: tmp_partition.rc == 0 and mount_tmp_output.rc != 0
    tags:
      - section1
      - section1.1
      - section1.1.3

  - apt:
      name: python-pip
      state: present
    when: tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.4

  - name: install dependencies for mountopts-module
    pip:
      name: fstab
    when: tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.4

  - mountopts:
      name: /tmp
      option: nosuid
      state: present
    when: tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.4

  - shell: mount | grep /tmp|grep nosuid
    register: mount_tmp_output
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.1
      - section1.1.4

  - name: 1.1.4 Ensure nosuid option set on /tmp partition (Scored)
    command: mount -o remount,nosuid /tmp
    ignore_errors: True
    when: tmp_partition.rc == 0 and mount_tmp_output.rc != 0
    tags:
      - section1
      - section1.1
      - section1.1.4

  - name: 1.1.5 Ensure separate partition exists for /var (Scored)
    command: grep '\s/var\s' /etc/fstab
    register: var_partition
    failed_when: var_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section1
      - section1.1
      - section1.1.5

  - apt:
      name: python-pip
      state: present
    when: var_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.

  - name: install dependencies for mountopts-module
    pip:
      name: fstab
    when: var_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.5

  - mountopts:
      name: /var
      option: nosuid
      state: present
    when: var_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.5

  - mountopts:
      name: /var
      option: noexec
      state: present
    when: var_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.5

  - mountopts:
      name: /var
      option: nodev
      state: present
    when: var_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.5

  - name: 1.1.6 Ensure separate partition exists for /var/tmp (Scored)
    command: grep '\s/var/tmp\s' /etc/fstab
    register: var_tmp_partition
    failed_when: var_tmp_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section1
      - section1.1
      - section1.1.6

  - apt:
      name: python-pip
      state: present
    when: var_tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.7

  - name: install dependencies for mountopts-module
    pip:
      name: fstab
    when: var_tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.7

  - mountopts:
      name: /var/tmp
      option: nodev
      state: present
    when: var_tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.7

  - shell: mount | grep /var/tmp|grep nodev
    register: mount_var_tmp_output
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.1
      - section1.1.7

  - name: 1.1.7 Ensure nodev option set on /var/tmp partition (Scored)
    command: mount -o remount,nodev /var/tmp
    ignore_errors: True
    when: var_tmp_partition.rc == 0 and mount_var_tmp_output.rc != 0
    tags:
      - section1
      - section1.1
      - section1.1.7

  - apt:
      name: python-pip
      state: present
    when: var_tmp_partition.rc == 0
    tags:
      - section1 
      - section1.1
      - section1.1.8

  - name: install dependencies for mountopts-module
    pip:
      name: fstab
    when: var_tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.8

  - mountopts:
      name: /var/tmp
      option: nosuid
      state: present
    when: var_tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.8

  - shell: mount | grep /var/tmp|grep nosuid
    register: mount_var_tmp_output
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.1
      - section1.1.8

  - name: 1.1.8 Ensure nosuid option set on /var/tmp partition (Scored)
    command: mount -o remount,nosuid /var/tmp
    ignore_errors: True
    when: var_tmp_partition.rc == 0 and mount_var_tmp_output.rc != 0
    tags:
      - section1
      - section1.1
      - section1.1.8

  - apt:
      name: python-pip
      state: present
    when: var_tmp_partition.rc == 0
    tags:
      - section1 
      - section1.1
      - section1.1.9

  - name: install dependencies for mountopts-module
    pip:
      name: fstab
    when: var_tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.9

  - mountopts:
      name: /var/tmp
      option: noexec
      state: present
    when: var_tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.9

  - shell: mount | grep /var/tmp|grep noexec
    register: mount_var_tmp_output
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.1
      - section1.1.9

  - name: 1.1.9 Ensure noexec option set on /var/tmp partition (Scored)
    command: mount -o remount,noexec /var/tmp
    ignore_errors: True
    when: var_tmp_partition.rc == 0 and mount_var_tmp_output.rc != 0
    tags:
      - section1
      - section1.1
      - section1.1.9

  - name: 1.1.10 Ensure separate partition exists for /var/log (Scored)
    command: grep '\s/var/log\s' /etc/fstab
    register: var_log_partition
    failed_when: var_log_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section1
      - section1.1
      - section1.1.10

  - apt:
      name: python-pip
      state: present
    when: var_log_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.10

  - name: install dependencies for mountopts-module
    pip:
      name: fstab
    when: var_log_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.10

  - mountopts:
      name: /var/log
      option: noexec
      state: present
    when: var_log_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.10

  - mountopts:
      name: /var/log
      option: nodev
      state: present
    when: var_log_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.10

  - mountopts:
      name: /var/log
      option: nosuid
      state: present
    when: var_log_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.10

  - name: 1.1.11 Ensure separate partition exists for /var/log/audit (Scored)
    command: grep '\s/var/log/audit\s' /etc/fstab
    register: var_log_audit_partition
    failed_when: var_log_audit_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section1
      - section1.1
      - section1.1.11

  - apt:
      name: python-pip
      state: present
    when: var_log_audit_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.11

  - name: install dependencies for mountopts-module
    pip:
      name: fstab
    when: var_log_audit_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.11

  - mountopts:
      name: /var/log/audit
      option: noexec
      state: present
    when: var_log_audit_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.11

  - mountopts:
      name: /var/log/audit
      option: nodev
      state: present
    when: var_log_audit_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.11

  - mountopts:
      name: /var/log/audit
      option: nosuid
      state: present
    when: var_log_audit_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.11

  - name: 1.1.12 Ensure separate partition exists for /home (Scored)
    command: grep '\s/home\s' /etc/fstab
    register: home_partition
    failed_when: home_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section1
      - section1.1
      - section1.1.12

  - apt:
      name: python-pip
      state: present
    when: home_partition.rc == 0
    tags:
      - section1 
      - section1.1
      - section1.1.13

  - name: install dependencies for mountopts-module
    pip:
      name: fstab
    when: home_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.13

  - mountopts:
      name: /home
      option: nodev
      state: present
    when: home_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.13

  - shell: mount | grep /home|grep nodev
    register: mount_home_output
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.1
      - section1.1.13

  - name: 1.1.13 Ensure nodev option set on /home partition (Scored)
    command: mount -o remount,nodev /home
    ignore_errors: True
    when: home_partition.rc == 0 and mount_home_output.rc == 1
    tags:
      - section1
      - section1.1
      - section1.1.13

  - shell: mount | grep /dev/shm|grep nodev
    register: mount_dev_shm_output
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.1
      - section1.1.14

  - name: 1.1.14 Ensure nodev option set on /dev/shm partition (Scored)
    command: mount -o remount,nodev /home
    ignore_errors: True
    when: mount_dev_shm_output.rc == 1
    tags:
      - section1
      - section1.1
      - section1.1.14

  - shell: mount | grep /dev/shm|grep nosuid
    register: mount_dev_shm_output
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.1
      - section1.1.15

  - name: 1.1.15 Ensure nosuid option set on /dev/shm partition (Scored)
    command: mount -o remount,nosuid /dev/shm
    ignore_errors: True
    when: mount_dev_shm_output.rc == 1
    tags:
      - section1
      - section1.1
      - section1.1.15

  - shell: mount | grep /dev/shm|grep noexec
    register: mount_dev_shm_output
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.1
      - section1.1.16

  - name: 1.1.16 Ensure noexec option set on /dev/shm partition (Scored)
    command: mount -o remount,noexec /dev/shm
    ignore_errors: True
    when: mount_dev_shm_output.rc == 1
    tags:
      - section1
      - section1.1
      - section1.1.16

  - name: 1.1.17 Ensure nodev option set on removable media partitions (Not Scored)
    debug:
      msg: "/!\ Ensure removable partitions have nodev option"
    tags:
      - section1
      - section1.1
      - section1.1.17

  - name: 1.1.18 Ensure nosuid option set on removable media partitions (Not Scored)
    debug:
      msg: "/!\ Ensure removable partitions have nosuid option"
    tags:
      - section1
      - section1.1
      - section1.1.18

  - name: 1.1.19 Ensure noexec option set on removable media partitions (Not Scored)
    debug:
      msg: "/!\ Ensure removable partitions have noexec option"
    tags:
      - section1
      - section1.1
      - section1.1.19

  - shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 -print 2>/dev/null
    failed_when: False
    changed_when: False
    check_mode: no
    register: sticky_bit_dirs
    tags:
      - section1
      - section1.1
      - section1.1.20

  - name: 1.1.20 Ensure sticky bit is set on all world-writable directories (Scored)
    file:
        path: "{{ item }}"
        mode: "a+t"
    with_items: "{{sticky_bit_dirs.stdout_lines}}"
    tags:
      - section1
      - section1.1
      - section1.1.20

  - shell: dpkg -l|grep autofs
    register: dpkg_autofs
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.1
      - section1.1.21Q

  - name: 1.1.21 Disable Automounting (Scored)
    systemd:
      name: autofs
      enabled: no
    when: dpkg_autofs.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.21

  - name: 1.2.1 Ensure package manager repositories are configured (Not Scored)
    lineinfile:
      dest: /etc/apt/sources.list
      line: '{{item}}'
      state: present
      create: yes
    with_items:
      - 'deb http://archive.ubuntu.com/ubuntu/ xenial main restricted'
      - 'deb http://archive.ubuntu.com/ubuntu/ xenial-updates main restricted'
      - 'deb http://archive.ubuntu.com/ubuntu/ xenial universe'
      - 'deb http://archive.ubuntu.com/ubuntu/ xenial-updates universe'
      - 'deb http://archive.ubuntu.com/ubuntu/ xenial multiverse'
      - 'deb http://archive.ubuntu.com/ubuntu/ xenial-updates multiverse'
      - 'deb http://archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse'
      - 'deb http://security.ubuntu.com/ubuntu xenial-security main restricted'
      - 'deb http://security.ubuntu.com/ubuntu xenial-security universe'
      - 'deb http://security.ubuntu.com/ubuntu xenial-security multiverse'
    tags:
      - section1
      - section1.2
      - section1.2.1

  - name: 1.2.2 Ensure GPG keys are configured (Not Scored)
    lineinfile:
      dest: /etc/apt/apt.conf.d/99GPG-apt
      line: 'APT::Get::AllowUnauthenticated "false";'
      state: present
      create: yes
    tags:
      - section1
      - section1.2
      - section1.2.2

  - name: 1.3.1 Ensure AIDE is installed (Scored)
    apt:
      name: aide
      state: present
    register: aide_installed
    when: use_aide == True
    tags:
      - section1
      - section1.3
      - section1.3.1

  - name: 1.3.2 Ensure filesystem integrity is regularly checked (Scored)
    cron:
      name: "Check files integrity"
      minute: 0
      hour: 5
      job: "/usr/sbin/aide --check"
    when: use_aide == True
    tags:
      - section1
      - section1.3
      - section1.3.2

  - name: 1.4.1 Ensure permissions on bootloader config are configured (Scored)
    file:
      dest: /boot/grub/grub.cfg
      owner: root
      group: root
      mode: 0600
    tags:
      - section1
      - section1.4
      - section1.4.1

  - command: grep "^password" /boot/grub/grub.cfg
    register: boot_password
    failed_when: false
    ignore_errors: yes 
    changed_when: False
    tags:
      - section1
      - section1.4
      - section1.4.2

  - name: 1.4.2 Ensure bootloader password is set (Scored)
    lineinfile:
        dest: /etc/grub.d/40_custom
        regexp: '^{{item.name}}'
        line: '{{item.name}}{{item.value}} {{item.value2}}'
        state: present
    with_items:
      - { name: 'set superusers=' , value: '"{{grub_superuser}}"' , value2: '' }
      - { name: 'password_pbkdf2 ' , value: '{{grub_superuser}}' , value2: '{{root_password_grub}}' }
    when: boot_password.rc == 1 and set_bootloader_password == true
    notify: update grub
    tags:
      - section1
      - section1.4
      - section1.4.2

  - command: grep "^root:[*\!]:" /etc/shadow
    register: root_password_set
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.4
      - section1.4.3

  - name: 1.4.3 Ensure authentication required for single user mode (Scored)
    user:
      name: root
      state: present
      password: "{{ root_password }}"
    when: root_password_set.rc == 0
    tags:
      - section1
      - section1.4
      - section1.4.3

  - command: grep "hard core" /etc/security/limits.conf
    register: hard_core
    failed_when: False
    changed_when: False
    tags:
      - section1
      - section1.5
      - section1.5.1

  - name: 1.5.1 Ensure core dumps are restricted (Scored)
    lineinfile:
      dest: '/etc/security/limits.conf'
      line: '* hard core 0'
      state: present
      insertbefore: '^# End of file'
    when: hard_core.rc != 0
    tags:
      - section1
      - section1.5
      - section1.5.1

  - name: 1.5.1 Ensure core dumps are restricted (Scored)
    sysctl:
      name: fs.suid_dumpable
      value: 0
      state: present
    when: restrict_core_dumps == True
    tags:
      - section1
      - section1.5
      - section1.5.1

  - name: 1.5.2 Ensure XD/NX support is enabled (Not Scored)
    shell: 'dmesg | grep NX'
    register: nx_result
    failed_when: nx_result.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section1
      - section1.5
      - section1.5.2

  - name: 1.5.3 Ensure address space layout randomization (ASLR) is enabled (Scored)
    sysctl:
      name: kernel.randomize_va_space
      value: 2
      state: present
    when: enable_aslr == True
    tags:
      - section1
      - section1.5
      - section1.5.3

  - name: 1.5.4 Ensure prelink is disabled (Scored)
    apt:
      name: prelink
      state: absent
    tags:
      - section1
      - section1.5
      - section1.5.4

  - name: 1.6.1.1 Ensure SELinux is not disabled in bootloader configuration (Scored)
    lineinfile:
      dest: /etc/default/grub
      line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet"'
      state: present
    tags:
      - section1
      - section1.6
      - section1.6.1.1

  - name: 1.6.1.1 Ensure SELinux is not disabled in bootloader configuration (Scored)
    lineinfile: 
      dest: /etc/default/grub
      line: 'GRUB_CMDLINE_LINUX=""'
      state: present
    tags:
      - section1
      - section1.6
      - section1.6.1.1

  - command: dpkg -l selinux
    register: selinux_installed
    failed_when: False
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.6
      - section1.6.1.2

  - apt:
      name: selinux
      state: present
    when: selinux_installed.rc == 1 and enable_selinux == True and use_apparmor == False
    tags:
      - section1
      - section1.6
      - section1.6.1.2

  - name: 1.6.1.2 Ensure the SELinux state is enforcing (Scored)
    lineinfile:
      dest: /etc/selinux/config
      line: 'SELINUX=enforcing'
      state: present
    when: selinux_installed.rc == 0 and enable_selinux == True and use_apparmor == False
    tags:
      - section1
      - section1.6
      - section1.6.1.2

  - name: 1.6.1.3 Ensure SELinux policy is configured (Scored)
    lineinfile:
      dest: /etc/selinux/config
      line: 'SELINUXTYPE=ubuntu'
      state: present
    when: selinux_installed.rc == 0 and enable_selinux == True and use_apparmor == False
    tags:
      - section1
      - section1.6
      - section1.6.1.3

  - name: 1.6.1.4 Ensure no unconfined daemons exist (Scored)
    shell: ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{print $NF }'
    when: selinux_installed.rc == 0 and enable_selinux == True and use_apparmor == False
    tags:
      - section1
      - section1.6
      - section1.6.1.4

  - name: 1.6.2.1 Ensure AppArmor is not disabled in bootloader configuration (Scored)
    command: sed -i -r 's/apparmor=0//g' /boot/grub/grub.cfg
    when: use_apparmor == True
    notify: update grub
    tags:
      - section1
      - section1.6
      - section1.6.2.1

  - shell : apparmor_status|grep "0 processes are in complain mode"
    register: apparmor_status_complain_output
    failed_when: False
    changed_when: False
    tags:
      - section1
      - section1.6
      - section1.6.2.2

  - shell : apparmor_status|grep "0 processes are unconfined"
    register: apparmor_status_unconfined_output
    failed_when: False
    changed_when: False
    tags:
      - section1
      - section1.6
      - section1.6.2.2

  - name: 1.6.2.2 Ensure all AppArmor Profiles are enforcing (Scored)
    shell: aa-enforce /etc/apparmor.d/*
    when: use_apparmor == True and apparmor_status_complain_output.rc == 1 and apparmor_status_unconfined_output == 1
    tags:
      - section1
      - section1.6
      - section1.6.2.2

  - name: 1.6.3 Ensure SELinux or AppArmor are installed (Not Scored)
    apt:
      name: "{{ selinux_apparmor }}"
      state: present
    tags:
      - section1
      - section1.6
      - section1.6.3

  - name: 1.7.1.1 Ensure message of the day is configured properly (Scored)
    lineinfile:
      dest: /etc/motd
      create: yes
      line: 'Authorized uses only. All activity may be monitored and reported.'
      state: present
    tags:
      - section1
      - section1.7
      - section1.7.1.1

  - name: 1.7.1.2 Ensure local login warning banner is configured properly (Not Scored)
    shell: egrep '(\\v|\\r|\\m|\\s)' /etc/issue
    register: egrep_os_infos
    failed_when: egrep_os_infos.rc == 0
    changed_when: False
    tags:
      - section1
      - section1.7
      - section1.7.1.2

  - name: 1.7.1.3 Ensure remote login warning banner is configured properly (Not Scored)
    shell: egrep '(\\v|\\r|\\m|\\s)' /etc/issue.net
    register: egrep_os_infos
    failed_when: egrep_os_infos.rc == 0
    changed_when: False
    tags:
      - section1
      - section1.7
      - section1.7.1.3

  - name: 1.7.1.4 Ensure permissions on /etc/motd are configured (Not Scored)
    file:
      path: /etc/motd
      owner: root
      group: root 
      mode: 0644
    tags:
      - section1
      - section1.7
      - section1.7.1.4

  - name: 1.7.1.5 Ensure permissions on /etc/issue are configured (Scored)
    file: 
      path: /etc/issue
      owner: root 
      group: root 
      mode: 0644
    tags:
      - section1
      - section1.7
      - section1.7.1.5

  - name: 1.7.1.6 Ensure permissions on /etc/issue.net are configured (Not Scored)
    file:
      path: /etc/issue.net
      owner: root
      group: root
      mode: 0644
    tags:
      - section1
      - section1.7
      - section1.7.1.7

  - name: 1.7.2 Ensure GDM login banner is configured (Scored)
    stat:
      path: /etc/dconf/profile/gdm
    register: gdm_rule 
    tags:
      - section1
      - section1.7
      - section1.7.2

  - name: 1.7.2 Ensure GDM login banner is configured (Scored)
    lineinfile:
      dest: /etc/dconf/profile/gdm
      regexp: '{{item.regexp}}'
    with_items:
      - { regexp: '^user-db:user' }
      - { regexp: '^system-db:gdm' }
      - { regexp: '^file-db:/usr/share/gdm/greeter-dconf-defaults' }
    when: gdm_rule.stat.exists == True 
    tags:
      - section1
      - section1.7
      - section1.7.2

  - name: 1.7.2 Ensure GDM login banner is configured (Scored)
    lineinfile:
      dest: /etc/dconf/db/gdm.d/01-banner-message
      create: yes
      regexp: "{{ item.regexp }}"
    with_items:
      - { regexp: '^[org/gnome/login-screen]' }
      - { regexp: '^banner-message-enable=true' }
      - { regexp: '^banner-message-text="Authorized uses only. All activity may be monitored and reported."^\' }
    when: gdm_rule.stat.exists == True 
    tags:
      - section1
      - section1.7
      - section1.7.2

  - name: 1.8 Ensure updates, patches, and additional security software are installed (Not Scored)
    apt:
      update_cache: yes
      cache_valid_time: "{{apt_cache_valid_time}}"
      upgrade: yes
    when: apt_upgrade == True
    tags:
      - section1
      - section1.8
